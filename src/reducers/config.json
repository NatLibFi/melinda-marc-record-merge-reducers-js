{
    "preprocessorDirectives" :
        [
            {
                "operation": "removeField",
                "comment": "bunch of tags we always drop from the source (semantic reason; holdings data etc)",
                "recordType": "source",
                "fieldSpecification": {
                    "tagPattern": "^(066|841|842|843|844|845|852|86[3-8]|876|877|878|HLI)$"
                }
            },

            {
                "operation": "removeSubfield",
                "comment": "Remove X00$d with old and deprecated (1) style value. (1) ... (99) are removed.",
                "recordType": "both",
                "fieldSpecification": {
                    "tagPattern": "^[1678]00$",
                    "subfieldFilters": [{"code": "d", "valuePattern": "^\\([1-9][0-9]?\\)[.,]?$"}]
                },
                "deletableSubfieldFilter": {"code": "d", "valuePattern": "^\\([1-9][0-9]?\\)[.,]?$" }
            },        

            {
                "operation": "removeSubfield",
                "comment": "remove price information",
                "recordType": "source",
                "fieldSpecification": {
                    "tagPattern": "^(?:020|024?)$",
                    "subfieldFilters": [{"code": "c"}]
                },
                "deletableSubfieldFilter": {"code": "c"}
            },

            {
                "operation": "renameSubfield",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "040",
                    "subfieldFilters": [{"code": "a"}]
                },
                "renamableSubfieldFilter": {"code": "a", "newCode": "d"}
            },

            {
                "operation": "removeSubfield",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "041",
                    "subfieldFilters": [{
                        "code": "a",
                        "value": "zxx"
                    }]
                },
                "deletableSubfieldFilter": {"code": "a", "value": "zxx"}
            },

            {
                "operation": "retag",
                "recordType": "source",
                "fieldSpecification": {"tag": "100"},
                "newTag": "700"
            },

            {
                "operation": "retag",
                "recordType": "source",
                "fieldSpecification": {"tag": "110"},
                "newTag": "710"
            },

            {
                "operation": "retag",
                "recordType": "source",
                "fieldSpecification": {"tag": "111"},
                "newTag": "711"
            },

            {
                "operation": "retag",
                "recordType": "source",
                "fieldSpecification": {"tag": "130"},
                "newTag": "730"
            },

            {
                "operation": "removeField",
                "recordType": "source",
                "fieldSpecification": {
                    "tagPattern": "^(?:648|650|651|655)$",
                    "subfieldFilters": [{
                        "code": "2",
                        "valuePattern": "^(allars|cilla|musa|ysa)$"
                    }]
                }
            },

            {
                "operation": "removeField",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "830",
                    "subfieldFilters": [{"missingCode": "x"}]
                },
                "comment": "NB! Domain-specific. As in specs."
            }

        ],
    "mergeConfiguration" :
    {   
        "comment #1" : "Meaningless indicators (=indicators having but one legal value) are derived from melindaCustomMergeFields.",
        "comment #2" : "Meaningless indicators and non-filing indicators never prevent merge. (Hard-coded in mergableIndicator.js)",
        "comment #3" : "When merging, indicator preference has set defaults in mergeIndicator.js. However, these can be overridden here.",       
        "indicator1PreferredValues": {
            "022" : {"0": 1, "1": 1, " ": 2},
            "041" : {"0": 1, "1": 1, " ": 2},
            "541" : {"0": 1, "1": 1, " ": 2},
            "542" : {"0": 1, "1": 1, " ": 2},
            "544" : {"0": 1, "1": 1, " ": 2},
            "545" : {"0": 1, "1": 1, " ": 2},
            "561" : {"0": 1, "1": 1, " ": 2},
            "583" : {"0": 1, "1": 1, " ": 2},
            "588" : {"0": 1, "1": 1, " ": 2},
            "650" : [ " ", "1", "2", "0" ]
        },
        "indicator2PreferredValues": {
            "024" : {"0": 1, "1": 1, " ": 2},
            "033" : {"0": 1, "1": 1, "2": 1, " ": 2},
            "730" : [ "2", " " ]
        },
        "comment #4" : "Non-filing indicators do not prevent merge. They are mainly listed here as an example.",
        "ignoreIndicator1" : ["130", "245", "630", "650", "651", "655", "730", "740"],
        "ignoreIndicator2" : ["222", "240", "242", "243", "245", "830"]
    },

    "addConfiguration" : {
        "preprocessorDirectives" : [
            {
                "operation": "removeField",
                "comment": "this should be done after field merge and before copy (could be merged, but not added)",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "240"
                },
                "requireBaseField": {
                    "tagPattern": "^(130|240)$"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove 041 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "041"
                },
                "requireBaseField": {
                    "tagPattern": "^(041)$"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove 260 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "260"
                },
                "requireBaseField": {
                    "tagPattern": "^(260)$"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove 264 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "264"
                },
                "requireBaseField": {
                    "tagPattern": "^(264)$"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove 300 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "300"
                },
                "requireBaseField": {
                    "tagPattern": "^(300)$"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove 310 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "310"
                },
                "requireBaseField": {
                    "tagPattern": "^(310)$"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove 321 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "321"
                },
                "requireBaseField": {
                    "tagPattern": "^(321)$"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove 335 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "335"
                },
                "requireBaseField": {
                    "tagPattern": "^(335)$"
                }
            },



            {
                "operation": "removeField",
                "comment": "Remove 336 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "336"
                },
                "requireBaseField": {
                    "tagPattern": "^(336)$"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove 337 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "337"
                },
                "requireBaseField": {
                    "tagPattern": "^(337)$"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove 338 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "338"
                },
                "requireBaseField": {
                    "tagPattern": "^(338)$"
                }
            }

        ]
    }
}