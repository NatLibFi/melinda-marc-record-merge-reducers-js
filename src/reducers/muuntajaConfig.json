{
    "preprocessorDirectives" : [
        {
            "operation": "swapFields",
            "comment": "Experimental. If source has 1XX or corresponding 7XX fields swap 'em fields from base and source",
            "comment2": "NB! recordType value is meaningless for swapFields!",
            "recordType": "base",
            "fieldSpecification": {"tagPattern": "^(?:100|110|111|130|700|710|711|730)$"},
            "requireSourceField": {
                "tagPattern": "^(?:100|110|111|130|700|710|711|730)$"
            }
        },

        {
            "operation": "removeSubfield",
            "comment": "remove 24X subfield $h as it may contain data about the manisfestation (that changes in Muuntaja)",
            "recordType": "source",
            "fieldSpecification": {
                "tagPattern": "^(?:24[0-9])$"
            },
            "deletableSubfieldFilter": {"code": "h"}
        },
        {
            "operation": "removeSubfield",
            "comment": "remove 24X $k subfields as they may contain data about the manisfestation (that changes in Muuntaja)",
            "recordType": "source",
            "fieldSpecification": {
                "tagPattern": "^(?:24[0-9])$"
            },
            "deletableSubfieldFilter": {"code": "k"}
        },

        {
            "operation": "removeField",
            "recordType": "source",
            "comment": "Remove 65X $g ENNAKKOTIETO fields from source if base has 65X without a $g ENNAKKOTIETO",
            "fieldSpecification": {
                "tagPattern": "^(648|650|651|653|655)$",
                "subfieldFilters": [{"code": "g", "valuePattern": "^(?:ennakkotieto|ENNAKKOTIETO)\\.?$"}]
            },
            "requireBaseField": {
                "tagPattern": "^(648|650|651|655)$",
                "subfieldFilters": [{"missingCode": "g"}]
            }
        },

        {
            "operation": "removeSubfield",
            "comment": "Remove X00$d with old and deprecated (1) style value. (1) ... (99) are removed.",
            "recordType": "both",
            "fieldSpecification": {
                "tagPattern": "^[1678]00$",
                "subfieldFilters": [{"code": "d", "valuePattern": "^\\([1-9][0-9]?\\)[.,]?$"}]
            },
            "deletableSubfieldFilter": {"code": "d", "valuePattern": "^\\([1-9][0-9]?\\)[.,]?$" }
        },

        {
            "operation": "renameSubfield",
            "recordType": "source",
            "fieldSpecification": {
                "tag": "040",
                "subfieldFilters": [{"code": "a"}]
            },
            "renamableSubfieldFilter": {"code": "a", "newCode": "d"}
        },

        {
            "operation": "removeSubfield",
            "recordType": "source",
            "fieldSpecification": {
                "tag": "041",
                "subfieldFilters": [{
                    "code": "a",
                    "value": "zxx"
                }]
            },
            "deletableSubfieldFilter": {"code": "a", "value": "zxx"}
        },

        {
            "operation": "removeField",
            "recordType": "source",
            "fieldSpecification": {
                "tagPattern": "^(?:648|650|651|655)$",
                "subfieldFilters": [{
                    "code": "2",
                    "valuePattern": "^(allars|cilla|musa|ysa)$"
                }]
            }
        },

        {
            "operation": "removeField",
            "recordType": "source",
            "fieldSpecification": {
                "tag": "830",
                "subfieldFilters": [{"missingCode": "x"}]
            },
            "comment": "NB! Domain-specific. As in specs."
        }

    ],
    "mergeConfiguration" :
    {
        "comment": "note that mergeConfiguration refer to field-level merge of subfields",
        "preprocessorDirectives": [
            {
                "operation": "removeField",
                "comment": "Muuntaja specific: bunch of tags never merge nor copy to base",
                "comment 2": "NB! Identifier fields 020, 022 and 015 and field 338 are used for bases 776 creation. Remove them only after that has been done (pre-merge).",
                "comment 3": "9XX: fields: keep 900, 910, 911, 940. Think about 960",
                "comment 3.1": "NB! MH wants to keep auth ref fields 900/910/911/940. NB! is used for multi-240 as well",
                "comment 3.2": "Field 960: we might want to keep eg. Saamelaisbibligrafia or Arto info",
                "comment 3.3": "MH also suggested that 974 $a KV stuff is kept",
                "comment 4": "Field 046 probably needs an indicator-related rule",
                "comment 5": "Field 242 is iffy as cataloging org changes",
                "comment 6": "Fields 210 and 222 are iffy as they refer to ISSN, and ISSN is dropped/goes to 776",
                "comment 7": "Field 385 will be handled by a separate rule, and it should not be removed here",
                "comment 8": "Fields 54X need to be discussed with an expert",
                "comment 9": "Field 588 is removed. However, we might create a new one?!?",
                "comment 10": "Field 776 is removed. Theoretically it might contain an identifier that goes to 020 or 022...",
                "recordType": "source",
                "fieldSpecification": {
                    "tagPattern": "^(?:01[^3]|02[^7]|03[^13]|04[249]|05[^25]|06[^0]|07[^2]|08[^0234]|2[5-9].|3[0-46][0-9]|35[^5]|38[678]|4..|504|51[456]|53.|541|546|55.|56[0-4]|58[^16]|773|776|8[0-7]..|9[04][1-9]|91[2-9]9|9[35689][0-9]|97[0-35-9]|CAT|LOW|RES|SID)$"
                }
            },
            {
                "operation": "removeField",
                "comment": "Remove source field 385 (audience characteristics) with restrictions",
                "comment 2": "Untested yet",
                "comment 3": "Different format might be aimed at different age or heath groups (eg. blind)",
                "comment 4": "Wouldn't bee too bad if they'd come, anyway.",
                "recordType": "source",
                "fieldSpecification": {
                    "tagPattern": "^385$",
                    "subfieldFilters": [{"code": "n", "valuePattern": "^(age|mpd)$"}]
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove source field 974 with restrictions",
                "comment 2": "Untested yet",
                "comment 3": "Current reality: we have ~30K 974 fields, and all of them have $a KV.",
                "recordType": "source",
                "fieldSpecification": {
                    "tagPattern": "^974$",
                    "subfieldFilters": [{"code": "a", "valuePattern": "^(?!KV$)"}]
                }
            }
        ],
        "comment #1" : "Meaningless indicators (=indicators having but one legal value) are derived from melindaCustomMergeFields.",
        "comment #2" : "Meaningless indicators and non-filing indicators never prevent merge. (Hard-coded in mergableIndicator.js)",
        "comment #3" : "When merging, indicator preference has set defaults in mergeIndicators.js. However, these can be overridden here.",
        "indicator1PreferredValues": {
            "022" : {"0": 1, "1": 1, " ": 2},
            "041" : {"0": 1, "1": 1, " ": 2},
            "341" : {"0": 1, "1": 1, " ": 2},
            "363" : {"0": 1, "1": 1, " ": 2},
            "382" : {"0": 1, "1": 1, " ": 2},
            "384" : {"0": 1, "1": 1, " ": 2},
            "388" : {"0": 1, "1": 1, " ": 2},
            "490" : [ "1", "0" ],
            "541" : {"0": 1, "1": 1, " ": 2},
            "542" : {"0": 1, "1": 1, " ": 2},
            "544" : {"0": 1, "1": 1, " ": 2},
            "545" : {"0": 1, "1": 1, " ": 2},
            "561" : {"0": 1, "1": 1, " ": 2},
            "583" : {"0": 1, "1": 1, " ": 2},
            "588" : {"0": 1, "1": 1, " ": 2},
            "650" : [ " ", "1", "2", "0" ]
        },
        "indicator2PreferredValues": {
            "024" : {"0": 1, "1": 1, " ": 2},
            "033" : {"0": 1, "1": 1, "2": 1, " ": 2},
            "363" : {"0": 1, "1": 1, " ": 2},
            "382" : {"0": 1, "1": 1, " ": 2},
            "730" : [ "2", " " ]
        },
        "comment #4" : "Non-filing indicators do not prevent field merge (their support is hard-coded). They are mainly listed here as an example.",
        "ignoreIndicator1" : ["130", "245", "490", "630", "650", "651", "655", "730", "740"],
        "ignoreIndicator2" : ["017", "222", "240", "242", "243", "245", "830"],
        "comment #5" : "If one indicator has value, and the other has not, it does not necessarily mean mismatch",
        "tolerateBlankIndicator1": ["022", "037", "041", "046", "050", "055", "060", "070", "080", "260", "264"],
        "tolerateBlankIndicator2": ["024", "033", "082"]
    },

    "addConfiguration" : {
        "preprocessorDirectives" : [
            {
                "operation": "retag",
                "recordType": "source",
                "fieldSpecification": {"tag": "100"},
                "newTag": "700",
                "requireBaseField": {
                    "tagPattern": "^1..$"
                }
            },

            {
                "operation": "retag",
                "recordType": "source",
                "fieldSpecification": {"tag": "110"},
                "newTag": "710",
                "requireBaseField": {
                    "tagPattern": "^1..$"
                }

            },

            {
                "operation": "retag",
                "recordType": "source",
                "fieldSpecification": {"tag": "111"},
                "newTag": "711",
                "requireBaseField": {
                    "tagPattern": "^1..$"
                }
            },

            {
                "operation": "retag",
                "recordType": "source",
                "fieldSpecification": {"tag": "130"},
                "newTag": "730",
                "requireBaseField": {
                    "tagPattern": "^1..$"
                }
            },
            
            {
                "operation": "removeField",
                "comment": "this should be done after field merge and before copy (could be merged, but not added)",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "240"
                },
                "requireBaseField": {
                    "tagPattern": "^(130|240)$"
                }
            },

            {
                "operation": "removeField",
                "comment": "Remove 041 so that a repeatable field won't be copied from source if base already has one",
                "recordType": "source",
                "fieldSpecification": {
                    "tag": "041"
                },
                "requireBaseField": {
                    "tagPattern": "^(041)$"
                }
            }

        ]
    },
    "postprocessorDirectives" :
        [
            {
                "operation": "removeField",
                "skip": true,
                "comment": "MET-113 (partial): delete 500 if better sister field exists",
                "recordType": "base",
                "fieldSpecification": {
                    "tag": "500",
                    "value": "500    ‡a ENNAKKOTIETO / KIRJAVÄLITYS.",
                    "comment": "NB! value corresponds with fieldToString(field) output"
                },
                "requireField": {
                    "tag": "500",
                    "value": "500    ‡a TARKISTETTU ENNAKKOTIETO / KIRJAVÄLITYS."
                }
            },
            {
                "operation": "removeField",
                "skip": true,
                "comment": "MET-113 (partial): delete 594 if better sister field exists",
                "recordType": "base",
                "fieldSpecification": {
                    "tag": "594",
                    "value": "594    ‡a ENNAKKOTIETO / KIRJAVÄLITYS ‡9 FENNI<KEEP>",
                    "comment": "NB! value corresponds with fieldToString(field) output"
                },
                "requireField": {
                    "tag": "594",
                    "value": "594    ‡a TARKISTETTU ENNAKKOTIETO / KIRJAVÄLITYS ‡9 FENNI<KEEP>"
                }
            }
        ]

}